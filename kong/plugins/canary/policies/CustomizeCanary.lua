---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Rao xiao'yan.
--- DateTime: 2020/2/24 17:11
---
local utils = require 'kong.plugins.canary';
local cmatch = require 'kong.plugins.canary.policies.cmatch';
local BaseCanary = require 'kong.plugins.canary.policies.BaseCanary';
local policy = "customize";
local CustomizeCanary = BaseCanary:new();

function CustomizeCanary:new(o, conf)
  o = o or BaseCanary:new(o, policy, conf)
  setmetatable(o, self);
  self.__index = self;
  return o;
end

function CustomizeCanary:validate()
  if not self.conf.customize.name or not self.conf.customize.range or #self.conf.customize.range == 0 then
    return true, nil;
  end
  local values = utils[self.conf.customize.on].getValue(self.conf.customize.name);
  if type(values) == 'string' then
    if cmatch.match(self.conf.customize.range, values) then
      return true, self.name;
    end
  elseif type(values) == 'table' then
    for _, v in ipairs(values) do
      if cmatch.match(self.conf.customize.range, v) then
        return true, self.name;
      end
    end
  end
  return false, self.name;
end

function CustomizeCanary:get_upstream()
  return self.conf.customize.upstream;
end

return CustomizeCanary
